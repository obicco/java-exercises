package com.obicco.calculator;

//Junit
import org.junit.jupiter.api.Test;
import java.lang.reflect.*;
import org.junit.jupiter.api.BeforeEach;
import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;

//Junit per Test Parametrici
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.junit.jupiter.params.provider.CsvSource;

	// AssertJ
import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.assertThatThrownBy;

	// Mockito
import org.mockito.Mock;
import org.mockito.InjectMocks;
import org.mockito.MockitoAnnotations;

import com.obicco.calculator.SimpleCalculator;

import static org.mockito.Mockito.when;
import static org.mockito.ArgumentMatchers.any;

class CalculatorTest {
	
	SimpleCalculator calculator = new SimpleCalculator();
	
	@BeforeEach
	void init() {
		//TO-IMPLEMENT
	}

	@Test
	void testAdd() {
		assertThat(calculator.add(10, 15)).isEqualTo(25);
	}
	
	@Test
	void testEvenOdd() {
		assertThat(calculator.isEven(10)).isTrue();
		assertThat(calculator.isEven(7)).isFalse();
	}
	
	@Test
	void testDivision() throws Exception {
		assertThat(calculator.divide(10, 10)).isNotNull();
		assertThatThrownBy(() -> calculator.divide(10, 0)).hasMessageContaining("not possible");
	}
	
	@Test
	void testPrintModel() throws NoSuchMethodException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
		
		
		final Method method = SimpleCalculator.class.getDeclaredMethod("printModel", String.class);
		method.setAccessible(true);
		
		assertThat(method.invoke(calculator, "249202660129701191")).isEqualTo("");
		assertThat(calculator.printModel()).isEqualTo(25);
	}
	
	

}
